type User{
    id: ID!
    name: String!
    email: String!
    contact: String!
    password: String!
    createdAt: Time!
}
input NewUser{
    name: String!
    email: String!
    contact: String!
    password: String!
}
input UpdateUser{
    name: String!
    email: String!
    contact: String!
    password: String!
}
type Chat{
    id: ID!
    sender_id: Int!
    receiver_id : Int!
    message: String!
    createdAt: Time!
}
type Subscription{
    messagePosted: Chat!
}
type Mutation{
    createUser(input: NewUser!): User!
    updateUser(id: ID!, input: UpdateUser!): User!
    deleteUSer(id: ID!): User!
    postMessage(sender_id: Int!,receiver_id: Int!,message: String!): Chat!
}
type Query{
    users: [User!]!
    chats(senderid: Int!, receiverid: Int!): [Chat!]!
}
scalar Time